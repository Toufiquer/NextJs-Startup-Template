generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid()) @db.Uuid()
  name      String?
  email     String?    @unique
  salt      String
  password  String
  role      Role       @default(USER)
  status    UserStatus @default(UNVERIFIED)
  verified  Boolean    @default(false)
  createdAt DateTime   @default(now()) @map(name: "created_at")
  updatedAt DateTime   @updatedAt @map(name: "updated_at")

  @@map(name: "users")
}

model Category {
  id          String         @id @default(cuid())
  name        String
  shop_id     BigInt
  status      CategoryStatus @default(AVAILABLE)
  createdAt   DateTime       @default(now()) @map(name: "created_at")
  updatedAt   DateTime       @updatedAt @map(name: "updated_at")
  Subcategory Subcategory[]
}

model Subcategory {
  id          String         @id @default(cuid())
  category_id String
  name        String
  stock       Int
  status      CategoryStatus @default(AVAILABLE)
  createdAt   DateTime       @default(now()) @map(name: "created_at")
  updatedAt   DateTime       @updatedAt @map(name: "updated_at")
  category    Category       @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cateogry_id")
}

enum UserStatus {
  LIMITED
  BLOCKED
  LOCKED
  BANNED
  VERIFIED
  UNVERIFIED
}

enum Role {
  USER
  ADMIN
  MANAGER
  STAFF
}

enum CategoryStatus {
  AVAILABLE // as it says
  OUT_OF_STOCK // as it says
  LOCKED // no sales happening in this category
  DISCOUNT // giving discount from daauk client (shop)
  BLOCKED // daauk admin blocked this category
  UNAVAILABLE // nothing is available
  LIMITED // can only buy certain from this category
}
